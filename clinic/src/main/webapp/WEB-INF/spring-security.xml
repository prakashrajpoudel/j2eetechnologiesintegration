<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
	<global-method-security pre-post-annotations="enabled"></global-method-security>
	<http auto-config="true">
	    <intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS" />
	    <intercept-url pattern="/login*" access="ROLE_ANONYMOUS"/>
		<intercept-url pattern="/*" access="ROLE_USER" />
		<form-login login-page="/login" default-target-url="/listClinic"
			authentication-failure-url="/loginFailed" />
		<logout logout-success-url="/login" />
	</http>


	<authentication-manager>
		<authentication-provider>
<!-- 			<user-service>
				<user name="admin" password="123456" authorities="ROLE_USER" />
			</user-service>
			 -->
			<jdbc-user-service data-source-ref='myDataSource' users-by-username-query='select username,password, true as enabled from user where username=?' authorities-by-username-query='select user.username , permission.permissionName as authorities from user join userrole on user.user_id = userrole.userId  join rolepermission on userrole.roleId = rolepermission.roleId join permission on permission.permissionId = rolepermission.permissionId  where user.username = ? '/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>